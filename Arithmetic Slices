A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same. For this
problem we need to find the total number of aritmatic slices in a aritmitic sequence of numbers in a sequence of numbers that contains at least 3 digits. Anything 
less than 3 digits cannot be accepted at all. If the sequence of numbers is not arithmitic there are no slices possible. First the sequence needs to be arithmitic
than the number of slices of at least 3 within the sequence are possible, hence the slices.

To understand this problem it will good to trace the examples given. The 4 sets of numbers given are [7,7,7,7], [3,-1,-5,-9], [1, 3, 5, 7, 9] and [1,1,2,5,7]
Iterating through the first set with four 7's it is obvious the difference between each is 0 and there are 3 slices. The set can be broken in to two sets of 3 and
the set itself is a slice so the total number of aritmitic slices is 3 for this instance. similar to the substring problem the set can be broken in to different
sets of at least 3 up to the number of integers in the set. Since there are negative numbers allowed in the sets I need to consider that in the logic. The fourth
set of numbers is not arithmetic because there are 4 different instances of difference between two numbers so there are 0 slices possible.

There would need to be two methods to solve this problem. The first will see if the sequence is aritmitic. This will be done by getting the absolute value
difference between the first two numbers than saving that number to a local variable to check while iterating through the sequence of numbers. The next check will
be between the 2nd and 3rd number, then 3rd and 4th and so on untill the last two digits of the sequence that check n-1 and n. If at any point the difference does
not match with the check variable a 0 will be returned. If the end of the sequence is reached than that means the sequence is arithmitic. The call to the second
method will send the length of the sequence n. This method will be similar to the method of the substring problem but the addition will be a little different. The 
pattern is a little different, for each n after 3 the number of slices will be equal to adding 1 than 2 than 3 and so on untill the number 3 is reached. The number
that will be used to iterate through a while loop will be an interger equal to the length of the sequence than decremented until reaching 3. Along with that variable
an integer that will be added to a variable total will be needed and start at 1, then be incremented until exiting the loop. For a sequnece of length 5 the total
will start with 0 and the number to be added will be 0.
Tracing work:
total:0,1,3,6 this is returned
number:1,2,3,4
tracker:5,4,3,2 exits loop no addition

The number will be added untill the tracker reaches 2 when no addition will be made and the loop will be exited and the total will be returned.

